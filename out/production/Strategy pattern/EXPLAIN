📚 Observer Design Pattern Overview
The Observer Pattern is a behavioral design pattern that establishes a one-to-many dependency between objects.
When the state of one object (the Subject) changes, all its dependents (Observers) are notified and updated automatically. 🔄


🛠️ Key Components:
🧩 Subject
The main object whose state changes.
Notifies all observers when a change happens 📢.

🧩 Observer
The dependent object that wants to be notified when the Subject changes.
Implements an update() method to receive notifications 📨.

🧩 ConcreteSubject
A specific implementation of the Subject.
Holds the state of interest (example: temperature, stock price) 🌡️📈.

🧩 ConcreteObserver
A specific implementation of the Observer.
Updates itself based on the changes in the ConcreteSubject 🔔